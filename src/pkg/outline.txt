
# python小脚本编写

# 无码无真相

# 每个人的自身情况不一样，找到自己合适的学习方式最重要，其他人的学习路径仅做参考

# 编程是一门实践性很强的行业

# 在有一门吃饭的语言下可以学习第二门语言  ->  迷茫？-> 没有兴奋点 -> 1.前端可以探索后端，比如写一个小程序、博客，前后独立完成
                                                              -> 2.后端玩转前端、安卓，使自己更具竞争力

# 对比式的学习是最有效的学习方式 -> 类比角色扮演游戏PVP -> 看新技术文档   -> 反哺之前学习的主语言

# 学习语言学的是生态

# 每个语言都有自己擅长的领域(python作为工具语言就很适合)-> 就是找到干某些事情最适合的轮子

# 轮子是科技进步的阶梯，轮子的数量也是生态是否强大的体现

# 最近github封存代码新闻

# 回归主题，语言只是业务的工具，不要走火入魔

# 框架不会永存，要注重编程思维的培养(基础的数据结构、算法等等)

# 建议： 1.建议少用百度，谷歌不香吗？
         2.英语很重要！英语很重要！英语很重要！ -> 1.原汁原味的官方文档   2.github开源项目issues
         3.擅用stackoverflow , 会有惊喜

# 下次分享预告： flutter的基本认识、入门等

# 后期的分享 ： 一些常用的算法、正则表达式等等(也刚好是自己学习的过程)
